#include <iostream>
#include <array>
#include <vector>
#include <math.h>
using namespace std;

class Vector{
  public:
    Vector(int n){//n= tama√±o
        if(n<2 || n>4){
            throw string{"Fuck off, incorrecto."};
        }
        size = n;
            for(int i = 0; i<n; i++){
                v.push_back(0);
             }


    }

     void setElement(int i, float valor){ //indice son las posiciones

            if(i<0 || i>(size-1)){
                throw string {"No puede ser ese vector."};

         }

            v.at(i) = valor;

         }

     float module(){
         float suma{0};
         for(int i{0}; i<size; i++){
             suma = suma +pow(v.at(i),2)   ;


         }
         return sqrt(suma);
     }

     Vector UnitVector(){
         Vector result(size);
         float m = module();
         for(int i{0}; i<size; i++){
             result.setElement(i, v.at(i)/m);

     }
         return result;
}
     
    
     //IMPRIMIR 
//     void print(){
//        cout << "[";
//         for(auto elem:v){
//             cout << elem << " , ";
//         }
//        cout << "]" << endl;
//    }
     
  int GetSize(){
      return size;
  }
  float getElement(int i){
      return v.at(i);
      
  }
  
  private:
    vector<float> v;
    int size;
   
};


    Vector add(Vector a, Vector b){
    if(a.GetSize() !=b.GetSize()){
        throw string{"No se puede sumar"};
    }
     Vector suma(a.GetSize());
     
     for(int i=0; i<a.GetSize(); i++){
         suma.setElement(i, a.getElement(i) + b.getElement(i));
         
     }
        
    }
    
    float scalarMultiply(Vector a, Vector b){
        
    }
    
    
    
    
    
    
    
    
int main()
{
    try{

     Vector miVector(3);
     cout <<"Introduce valores 3 valores: " << endl;


     for(int i{0}; i<3; i++){
         float aux;
         cin >> aux;
         miVector.setElement(i, aux);
     }

    cout << "El modulo es: " << miVector.module() << endl;


 }
    catch(string e){
        cout << e << endl;
        return -1;
    }
    return 0;
}


//PARTE DE LA PRACTICA, MATRIZ TRASPUESTA

//public static Matriz traspuesta(Matriz a){
 //       int n=a.n;
 //       Matriz resultado=new Matriz(a.n);
 //       for(int i=0; i<n; i++){
 //           for(int j=0; j<n; j++){
 //               resultado.x[i][j]=a.x[j][i];
 //           }
//        }
 //       return resultado;
 //   }



    }
